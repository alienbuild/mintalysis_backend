generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model leaderboard {
  wallet            String? @db.Text
  token_count       Float?
  date              String? @db.Text
  sales             Float?
  purchases         Float?
  net_trade_balance Float?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model mints {
  id        BigInt?
  user      String? @db.Text
  timestamp String? @db.Text
  token_id  BigInt?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model mints_daily {
  date    DateTime @db.Date
  wallets Int
  items   Int

  @@ignore
}

model tmp_comic_errors {
  token_id Int     @id @unique(map: "token_id")
  name     String? @db.Text
  edition  Int?
}

model token_data {
  token_id        Int      @id
  name            String   @db.Text
  edition         Int
  mint_date       DateTime @default(now()) @db.Timestamp(0)
  rarity          String?  @db.Text
  collectibleId   String?  @db.Text
  uniqueCoverId   String?  @db.Text
  type            String   @db.Text
  last_updated    DateTime @default(now()) @db.Timestamp(0)
  edition_type    String?  @db.Text
  drop_date       DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @db.Timestamp(0)
  store_price     Decimal  @db.Decimal(10, 0)
  total_issued    Int
  market_fee      Decimal? @db.Decimal(10, 0)
  brand_name      String   @db.Text
  brand_id        String?  @db.Text
  licensor_name   String   @db.Text
  licensor_id     String?  @db.Text
  series_name     String   @db.Text
  series_id       String   @db.Text
  image_thumbnail String   @db.Text
  image_url       String   @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model transfers {
  id        BigInt?
  from_user String? @db.Text
  to_user   String? @db.Text
  timestamp String? @db.Text
  token_id  BigInt?

  @@index([token_id], map: "token_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model transfers_daily {
  date      DateTime @db.Date
  transfers Int
  sellers   Int
  buyers    Int
  items     Int
  wallets   Int

  @@ignore
}

model users {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String?  @unique
  role      Role     @default(BASIC)

  @@index([email], map: "email")
}

model profile {
  id             Int      @id @default(autoincrement())
  bio            String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user_id        String   @unique
  avatar         String?
  complete       Boolean  @default(false)
  wallet_address String?
}

model posts {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author_id String

  @@index([author_id], map: "posts_author_id_fkey")
}

model comments {
  id        Int    @id @default(autoincrement())
  comment   String
  post_id   Int
  author_id String

  @@index([author_id], map: "comments_author_id_fkey")
  @@index([post_id], map: "comments_post_id_fkey")
}

model licensors {
  licensor_id                                String   @id
  name                                       String?
  description                                String?
  market_fee                                 Decimal?
  theme_logo_image_url                       String?
  theme_logo_image_thumbnail_url             String?
  theme_logo_image_low_resolution_url        String?
  theme_logo_image_med_resolution_url        String?
  theme_logo_image_full_resolution_url       String?
  theme_logo_image_high_resolution_url       String?
  theme_logo_image_direction                 String?
  theme_background_image_url                 String?
  theme_background_image_thumbnail_url       String?
  theme_background_image_low_resolution_url  String?
  theme_background_image_med_resolution_url  String?
  theme_background_image_full_resolution_url String?
  theme_background_image_high_resolution_url String?
  theme_background_image_direction           String?
  theme_footer_image_url                     String?
  theme_footer_image_thumbnail_url           String?
  theme_footer_image_low_resolution_url      String?
  theme_footer_image_med_resolution_url      String?
  theme_footer_image_full_resolution_url     String?
  theme_footer_image_high_resolution_url     String?
  theme_footer_image_direction               String?
  landscape_image_url                        String?
  landscape_image_thumbnail_url              String?
  landscape_image_low_resolution_url         String?
  landscape_image_med_resolution_url         String?
  landscape_image_full_resolution_url        String?
  landscape_image_high_resolution_url        String?
  landscape_image_direction                  String?
  square_image_url                           String?
  square_image_thumbnail_url                 String?
  square_image_low_resolution_url            String?
  square_image_med_resolution_url            String?
  square_image_full_resolution_url           String?
  square_image_high_resolution_url           String?
  square_image_direction                     String?
}

model brands {
  brand_id                                   String  @id
  name                                       String?
  description                                String?
  theme_logo_image_url                       String?
  theme_logo_image_thumbnail_url             String?
  theme_logo_image_low_resolution_url        String?
  theme_logo_image_med_resolution_url        String?
  theme_logo_image_full_resolution_url       String?
  theme_logo_image_high_resolution_url       String?
  theme_logo_image_direction                 String?
  theme_background_image_url                 String?
  theme_background_image_thumbnail_url       String?
  theme_background_image_low_resolution_url  String?
  theme_background_image_med_resolution_url  String?
  theme_background_image_full_resolution_url String?
  theme_background_image_high_resolution_url String?
  theme_background_image_direction           String?
  theme_footer_image_url                     String?
  theme_footer_image_thumbnail_url           String?
  theme_footer_image_low_resolution_url      String?
  theme_footer_image_med_resolution_url      String?
  theme_footer_image_full_resolution_url     String?
  theme_footer_image_high_resolution_url     String?
  theme_footer_image_direction               String?
  landscape_image_url                        String?
  landscape_image_thumbnail_url              String?
  landscape_image_low_resolution_url         String?
  landscape_image_med_resolution_url         String?
  landscape_image_full_resolution_url        String?
  landscape_image_high_resolution_url        String?
  landscape_image_direction                  String?
  square_image_url                           String?
  square_image_thumbnail_url                 String?
  square_image_low_resolution_url            String?
  square_image_med_resolution_url            String?
  square_image_full_resolution_url           String?
  square_image_high_resolution_url           String?
  square_image_direction                     String?
}

model series {
  series_id                                  String   @id
  name                                       String?
  description                                String?
  season                                     String?
  is_blindbox                                Boolean? @default(false)
  theme_logo_image_url                       String?
  theme_logo_image_thumbnail_url             String?
  theme_logo_image_low_resolution_url        String?
  theme_logo_image_med_resolution_url        String?
  theme_logo_image_full_resolution_url       String?
  theme_logo_image_high_resolution_url       String?
  theme_logo_image_direction                 String?
  theme_background_image_url                 String?
  theme_background_image_thumbnail_url       String?
  theme_background_image_low_resolution_url  String?
  theme_background_image_med_resolution_url  String?
  theme_background_image_full_resolution_url String?
  theme_background_image_high_resolution_url String?
  theme_background_image_direction           String?
  theme_footer_image_url                     String?
  theme_footer_image_thumbnail_url           String?
  theme_footer_image_low_resolution_url      String?
  theme_footer_image_med_resolution_url      String?
  theme_footer_image_full_resolution_url     String?
  theme_footer_image_high_resolution_url     String?
  theme_footer_image_direction               String?
  landscape_image_url                        String?
  landscape_image_thumbnail_url              String?
  landscape_image_low_resolution_url         String?
  landscape_image_med_resolution_url         String?
  landscape_image_full_resolution_url        String?
  landscape_image_high_resolution_url        String?
  landscape_image_direction                  String?
  square_image_url                           String?
  square_image_thumbnail_url                 String?
  square_image_low_resolution_url            String?
  square_image_med_resolution_url            String?
  square_image_full_resolution_url           String?
  square_image_high_resolution_url           String?
  square_image_direction                     String?

}

model collectibles {
  collectible_id                       String    @id
  name                                 String
  total_likes                          Int?
  isFree                               Boolean?  @default(false)
  store_price                          Decimal?
  is_unlimited                         Boolean?  @default(false)
  total_issued                         Int?
  total_available                      Int?
  description                          String?
  rarity                               String?
  variety                              String?
  edition_type                         String?
  dropMethod                           String?
  drop_date                            DateTime?
  market_fee                           Decimal?
  background_image_url                 String?
  background_image_thumbnail_url       String?
  background_image_low_resolution_url  String?
  background_image_med_resolution_url  String?
  background_image_full_resolution_url String?
  background_image_high_resolution_url String?
  background_image_direction           String?
  image_url                            String?
  image_thumbnail_url                  String?
  image_low_resolution_url             String?
  image_med_resolution_url             String?
  image_full_resolution_url            String?
  image_high_resolution_url            String?
  image_direction                      String?
  createdAt                            DateTime  @default(now())
  updatedAt                            DateTime  @updatedAt
}

model comics {
  uniqueCoverId         String    @unique
  name                  String
  rarity                String?
  description           String?
  comicNumber           Int?
  comic_series_id       String?
  comic_series_name     String?
  cover_image_thumbnail String?
  cover_image_full      String?
  drop_date             DateTime?
  pageCount             Int?
  store_price           Decimal?
  total_editions        Int?
  publisher_id          String?
  publisher_name        String?
  market_fee            Decimal?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  id                    Int       @id @default(autoincrement())

  @@index([uniqueCoverId], map: "uniqueCoverId")
}

model publishers {
  id             Int      @id @default(autoincrement())
  publisher_id   String   @unique
  publisher_name String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([publisher_id], map: "publisher_id")
}

model messages {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  read      Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

enum Role {
  BASIC
  ADMIN
}
